#!/usr/bin/env python3

import rospy
import numpy as np

from std_msgs.msg import String
from sensor_msgs.msg import LaserScan
from geometry_msgs.msg import Point, Pose, Quaternion
from nav_msgs.msg import OccupancyGrid
from visualization_msgs.msg import Marker


class PCIMR_Localization_Node:
	"""
	A node, capsuling the functionality from the simple robot simulator.
	"""

	def __init__(self):
	
		# Retrieve ROS Params
		robot_move_prob = rospy.get_param('~robot_move_probabilities')
		
		
		
		# Initialize Publishers
		self.pub_map = rospy.Publisher('/robot_pos_map', OccupancyGrid, queue_size=10)

		# Initialize Subscribers
		self.sub_pos = rospy.Subscriber('/robot_pos', Point, self.cb_pos)
		self.sub_scan = rospy.Subscriber('/scan', LaserScan,  self.cb_scan)
		
	def cb_pos(self, data):
		pass
	
	def cb_scan(self, data):
		pass
	
	def publish(self):
		pass
		
	def run(self):
		rate = rospy.Rate(10)
		while not rospy.is_shutdown():
			#keeps node from exiting until the node has been shutdown.
			self.publish()
			rate.sleep()


if __name__ == "__main__":
	rospy.init_node('pcimr_localization_node')
	pcimr_localization_node = PCIMR_Localization_Node()
	pcimr_localization_node.run()
