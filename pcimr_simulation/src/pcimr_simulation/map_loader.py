# Third party modules
import numpy
from PIL import Image


def get_image(image_path):
    """Get a numpy array of an image so that one can access values[x][y]."""
    image = Image.open(image_path, "r")
    width, height = image.size
    pixel_values = list(image.getdata())
    if image.mode == "RGB":
        channels = 3
    elif image.mode == "L":
        channels = 1
    else:
        print("Unknown mode: %s" % image.mode)
        return None
    pixel_values = numpy.array(pixel_values).reshape((width, height, channels))

    pixel_values[pixel_values > 0] = 1
    pixel_values = numpy.rot90(pixel_values, 3)
    pixel_values = 1 - pixel_values

    return pixel_values


def print_map(image):
    symbols = ['O', 'X']

    for y in range(image.shape[1] - 1, -1, -1):
        line = ''
        for x in range(image.shape[0]):
            line += symbols[int(image[x, y])] + ' '
        line += ''
        print('{}: {}'.format(y, line))


image = get_image('../map.jpg')

print(image[0, 12])
print(image[0, 13])
print(image[0, 20])

print(numpy.array2string(image).replace('0]\n  ', '0],').replace('1]\n  ', '1],').replace(']]\n', ']],'))

print(image.shape)

a = numpy.array([[[1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [0], [0], [0], [0], [0], [0], [0],
                  [0], [0], [0], [0], [0]],
                 [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [1], [0], [0], [0], [0], [0], [0], [0],
                  [0], [0], [0], [0], [0]],
                 [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [1], [0], [1], [1], [1], [1], [1], [1],
                  [0], [0], [1], [0], [0]],
                 [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [1], [0], [1], [0], [0], [0], [0], [0],
                  [0], [0], [1], [0], [0]],
                 [[1], [1], [1], [1], [1], [1], [1], [1], [1], [0], [0], [0], [1], [0], [1], [0], [0], [1], [1], [1],
                  [1], [1], [1], [0], [0]],
                 [[0], [0], [0], [0], [0], [0], [0], [0], [1], [0], [0], [0], [1], [0], [1], [0], [1], [1], [1], [1],
                  [1], [1], [1], [0], [0]],
                 [[0], [0], [0], [0], [0], [0], [0], [0], [1], [0], [0], [0], [1], [0], [1], [0], [1], [1], [1], [1],
                  [1], [0], [1], [0], [0]],
                 [[1], [1], [0], [1], [1], [0], [0], [0], [1], [0], [0], [0], [1], [0], [1], [0], [1], [0], [1], [1],
                  [0], [1], [1], [0], [0]],
                 [[0], [0], [0], [0], [0], [0], [0], [1], [1], [0], [0], [0], [1], [0], [1], [0], [0], [0], [0], [0],
                  [1], [1], [1], [0], [0]],
                 [[0], [0], [0], [0], [0], [0], [0], [1], [0], [0], [0], [0], [1], [0], [1], [0], [0], [0], [0], [0],
                  [1], [1], [1], [0], [0]],
                 [[1], [1], [1], [1], [1], [0], [0], [0], [0], [1], [1], [0], [1], [0], [1], [1], [1], [1], [0], [0],
                  [1], [1], [1], [0], [0]],
                 [[0], [0], [0], [0], [1], [0], [0], [1], [1], [1], [1], [0], [1], [0], [0], [0], [0], [0], [1], [0],
                  [1], [1], [1], [0], [0]],
                 [[0], [0], [0], [0], [1], [0], [0], [1], [1], [1], [0], [0], [1], [1], [0], [0], [0], [1], [1], [0],
                  [0], [1], [1], [0], [0]],
                 [[1], [1], [0], [0], [1], [0], [0], [1], [0], [0], [0], [0], [0], [1], [0], [0], [0], [1], [0], [0],
                  [0], [1], [1], [0], [0]],
                 [[0], [1], [0], [0], [1], [0], [0], [1], [0], [1], [1], [1], [0], [1], [0], [1], [1], [1], [0], [1],
                  [1], [1], [1], [0], [0]],
                 [[0], [1], [0], [0], [1], [0], [0], [0], [0], [1], [0], [1], [0], [1], [0], [1], [0], [0], [0], [1],
                  [1], [1], [0], [0], [0]],
                 [[0], [1], [0], [0], [1], [0], [0], [1], [1], [1], [0], [1], [0], [1], [0], [1], [0], [0], [1], [1],
                  [1], [0], [0], [0], [1]],
                 [[0], [1], [0], [0], [1], [0], [0], [1], [0], [0], [0], [1], [1], [1], [0], [1], [0], [0], [1], [1],
                  [0], [0], [0], [1], [1]],
                 [[0], [1], [0], [0], [1], [0], [0], [1], [0], [0], [0], [0], [0], [0], [0], [1], [0], [0], [1], [0],
                  [0], [0], [1], [1], [0]],
                 [[0], [1], [0], [0], [1], [0], [0], [1], [1], [0], [1], [1], [1], [1], [1], [1], [0], [0], [1], [0],
                  [0], [1], [1], [0], [0]],
                 [[0], [1], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [1], [0],
                  [1], [1], [0], [0], [0]],
                 [[0], [1], [0], [0], [1], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [1], [0],
                  [0], [0], [0], [0], [1]],
                 [[0], [1], [0], [0], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [1], [0],
                  [0], [0], [0], [1], [1]],
                 [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0],
                  [0], [0], [1], [1], [1]],
                 [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0],
                  [0], [0], [1], [1], [1]]])

print(numpy.array2string(a).replace('0]\n  ', '0],').replace('1]\n  ', '1],').replace(']]\n', ']],'))

# im = Image.open('../map.jpg') # Can be many different formats.
# pix = im.load()
# print(im.size)  # Get the width and hight of the image for iterating over
# x = 2
# y = 2
# print(pix[x,y])  # Get the RGBA Value of the a pixel of an image
#
# print(pix)
